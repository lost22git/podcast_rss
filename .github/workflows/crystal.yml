name: Crystal CI

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * *'

jobs:
  check_format:
    runs-on: ubuntu-latest
    steps:
      - name: Install Crystal
        uses: crystal-lang/install-crystal@v1
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Install dependencies
        run: shards install
      - name: Check format
        run: crystal tool format --check

  check_ameba:
    runs-on: ubuntu-latest
    steps:
      - name: Install Crystal
        uses: crystal-lang/install-crystal@v1
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Crystal Ameba Linter
        id: crystal-ameba
        uses: crystal-ameba/github-action@v0.9.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test:
    strategy:
      fail-fast: false
      matrix:
        include:
          - {os: ubuntu-latest, crystal: latest}
          - {os: ubuntu-latest, crystal: nightly}
          - {os: macos-latest}
          - {os: windows-latest}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install libduckdb
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo curl -fsSL -o libduckdb.zip https://github.com/duckdb/duckdb/releases/download/v0.10.2/libduckdb-linux-amd64.zip 
            sudo chmod +x libduckdb.zip
            sudo unzip libduckdb.zip -d /usr/local/lib
            sudo ldconfig
          elif [ "$RUNNER_OS" == "macOS" ]; then
            sudo curl -fsSL -o libduckdb.zip https://github.com/duckdb/duckdb/releases/download/v0.10.2/libduckdb-osx-universal.zip 
            sudo chmod +x libduckdb.zip
            sudo unzip libduckdb.zip -d /usr/local/lib
            sudo update_dyld_shared_cache
          elif [ "$RUNNER_OS" == "Windows" ]; then
            curl -fsSL -o libduckdb.zip https://github.com/duckdb/duckdb/releases/download/v0.10.2/libduckdb-windows-amd64.zip
            unzip libduckdb.zip -d /c/Windows/System32
          else
              echo "$RUNNER_OS not supported"
              exit 1
          fi
        shell: bash
      - name: Install Crystal
        uses: crystal-lang/install-crystal@v1
        with:
          crystal: ${{ matrix.crystal }}
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Install dependencies
        run: shards install
      - name: Run tests
        run: crystal spec --verbose --progress --time --stats
