name: Release

on:
  push:
    tags:
      - "*"

jobs:
  release:
    name: Publish for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

        include:
          - os: ubuntu-latest
            target_name: podcast_rss
            asset_suffix: linux-amd64
          - os: macos-latest
            target_name: podcast_rss
            asset_suffix: darwin-amd64
          - os: windows-latest
            target_name: podcast_rss.exe
            asset_suffix: windows-amd64.exe
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
      - name: Install Crystal
        uses: crystal-lang/install-crystal@v1
      - name: Install dependencies
        run: shards install --production
      - name: Install libduckdb
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo curl -fsSL -o libduckdb.zip https://github.com/duckdb/duckdb/releases/download/v0.10.2/libduckdb-linux-amd64.zip 
            sudo chmod +x libduckdb.zip
            sudo unzip libduckdb.zip -d /usr/local/lib
            sudo ldconfig
          elif [ "$RUNNER_OS" == "macOS" ]; then
            sudo curl -fsSL -o libduckdb.zip https://github.com/duckdb/duckdb/releases/download/v0.10.2/libduckdb-osx-universal.zip 
            sudo chmod +x libduckdb.zip
            sudo unzip libduckdb.zip -d /usr/local/lib
            sudo update_dyld_shared_cache
          elif [ "$RUNNER_OS" == "Windows" ]; then
            curl -fsSL -o libduckdb.zip https://github.com/duckdb/duckdb/releases/download/v0.10.2/libduckdb-windows-amd64.zip
            unzip libduckdb.zip -d libduckdb-windows-amd64
          else
              echo "$RUNNER_OS not supported"
              exit 1
          fi
        shell: bash
      - name: Compile release
        if: runner.os != 'Windows'
        env:
          LLVM_CONFIG: /usr/local/opt/llvm/bin/llvm-config
          PKG_CONFIG_PATH: /usr/local/opt/openssl/lib/pkgconfig
        run: |
          crystal -v
          shards build --release --no-debug --verbose --progress --time --stats
      - name: Compile release
        if: runner.os == 'Windows'
        env:
          LLVM_CONFIG: /usr/local/opt/llvm/bin/llvm-config
          PKG_CONFIG_PATH: /usr/local/opt/openssl/lib/pkgconfig
        run: |
          $env:Path="$(pwd)\libduckdb-windows-amd64;$env:Path"
          $env:CRYSTAL_LIBRARY_PATH="$(pwd)\libduckdb-windows-amd64;$(crystal env CRYSTAL_LIBRARY_PATH)"
          crystal -v
          shards build --release --no-debug --verbose --progress --time --stats
      - name: Add binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: bin/${{ matrix.target_name }}
          asset_name: podcast_rss_${{ github.ref_name }}_${{ matrix.asset_suffix }}
          tag: ${{ github.ref }}
          overwrite: true
